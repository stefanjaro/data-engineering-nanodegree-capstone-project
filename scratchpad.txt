https://www.startdataengineering.com/post/how-to-submit-spark-jobs-to-emr-cluster-from-airflow/
https://blog.insightdatascience.com/scheduling-spark-jobs-with-airflow-4c66f3144660
https://meta.wikimedia.org/wiki/List_of_countries_by_regional_classification
https://stackoverflow.com/questions/51949414/read-sas-sas7bdat-data-with-spark

/usr/bin/spark-submit --master yarn --packages "saurfang:spark-sas7bdat:3.0.0-s_2.12" immigration-data-preprocessing.py

/usr/bin/spark-submit --master yarn --packages "saurfang:spark-sas7bdat:3.0.0-s_2.12" --py-files s3://dendcapstoneproject/scripts/shared_spark_vars.py s3://dendcapstoneproject/scripts/immigration-data-preprocessing.py

https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-commandrunner.html

# installing airflow
export AIRFLOW_HOME=~/airflow
pip install "apache-airflow==2.2.5" --constraint "https://raw.githubusercontent.com/apache/airflow/constraints-2.2.5/constraints-3.9.txt"
PATH=$PATH:~/.local/bin
pip install 'apache-airflow-providers-postgres'
pip install 'apache-airflow-providers-amazon'
airflow db init
airflow users create \
--username admin \
--firstname stefan \
--lastname jaro \
--role Admin \
--email XXX@XXX.com
airflow webserver --port 7777 # in one terminals
airflow scheduler # seperate terminal

https://stackoverflow.com/questions/59895/how-can-i-get-the-source-directory-of-a-bash-script-from-within-the-script-itsel

WITH t1 AS (
  	SELECT state_id, SUM(all_travellers) AS state_total_travellers
  	FROM fact_immigration
  	GROUP BY 1
),
	t2 AS (
  	SELECT state_id, foreign_pop AS state_foreign_pop
 	FROM fact_demographics
), 
	t3 AS (
  	SELECT state_id, SUM(state_total_travellers) OVER () AS country_total_travellers
    FROM t1
),
	t4 AS (
    SELECT state_id, SUM(foreign_pop) OVER () country_total_foreign_pop
    FROM fact_demographics
)

SELECT t1.state_id,
	t1.state_total_travellers,
    t2.state_foreign_pop,
	ROUND((CAST(t1.state_total_travellers AS DECIMAL) / t3.country_total_travellers) * 100, 4) AS state_traveller_perc,
    ROUND((CAST(t2.state_foreign_pop AS DECIMAL) / t4.country_total_foreign_pop) * 100, 3) AS foreign_pop_perc
FROM t1
JOIN t2 ON t1.state_id = t2.state_id
JOIN t3 on t1.state_id = t3.state_id
JOIN t4 on t1.state_id = t4.state_id
WHERE t1.state_total_travellers IS NOT NULL AND t2.state_foreign_pop IS NOT NULL
ORDER BY 3 DESC;